/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "34keys.h"

#define DEF_L 0
#define NAV_L 1
#define OTH_L 2
#define NUM_L 3
#define SYM_L 4
#define CAL_L 5
#define CNV_L 6
#define CNM_L 6
#define MED_L 7
#define FUN_L 8

#define HYP LS(LC(LA(LGUI)))

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        med_mo {
	    timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo MED_L>;
        };

        fn_mo {
	    timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo FUN_L>;
        };

        combo_semicolon {
            timeout-ms = <40>;
            key-positions = <6 7>;
            bindings = <&kp SEMI>;
        };
        combo_tab {
            timeout-ms = <40>;
            key-positions = <26 27>;
            bindings = <&kp TAB>;
        };
        combo_capslock {
            timeout-ms = <40>;
            key-positions = <5 15>;
            bindings = <&caps_word>;
        };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            quick-release;
            release-after-ms = <STICKY_KEY_TIMEOUT>;
        };

        // Sticky key on tap, normal key on hold
        // Useful for modifier-clicking without the modifier remaining active
        nk: not_so_sticky_key {
            compatible = "zmk,behavior-hold-tap";
            label = "NOT_SO_STICKY_KEY";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&sk>;
        };

        // A hold-tap that activates without delay (like `&mo`)
        mo_tap: mo_with_tap {
            clindings = <&mo>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q      &kp W      &kp F       &kp P          &kp B         &kp J            &kp L          &kp U       &kp Y       &kp APOS
                &hm LGUI A &hm LALT R &hm LCTRL S &hm LSFT T     &kp G         &kp M            &hm RSFT N     &hm RCTRL E &hm LALT I  &hm RGUI O
                &kp Z      &kp X      &kp C       &kp D          &kp V         &kp K            &kp H          &kp COMMA   &kp DOT     &kp FSLH
                                                  &kp BSPC &lt NUM_L RET &lt NAV_L SPACE  &mt LS(LC(LA(LGUI))) ESC
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &kp PG_DN   &kp PG_UP  &kp END
                &kp LGUI   &kp LALT   &kp LCTRL   &kp LSFT        &trans       &trans           &kp LARW       &kp DARW    &kp UARW   &kp RARW
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                                                  &trans          &trans       &kp ESC          &kp DEL
            >;
        };

        other_layer {
            label = "Other";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &bt BT_CLR
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &trans       &trans
                &trans     &trans     &trans      &trans          &trans       &bt BT_SEL 0     &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
                &none       &none     &kp LPAR      &kp RPAR      &none       &kp GRAVE   &kp N7  &kp N8  &kp N9  &kp BSLH
                &kp LGUI    &kp LALT  &hm LCTL LBKT &hm LSFT RBKT &kp CAPS    &kp MINUS   &kp N4  &kp N5  &kp N6  &kp CMMA
                &none       &none     &kp LBRC      &kp RBRC      &none       &kp EQUAL   &kp N1  &kp N2  &kp N3  &kp DOT
                                      &trans        &trans        &kp SPACE   &kp N0
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
                &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC        &kp TILDE &kp LPAR  &kp RPAR  &trans   &trans
                &kp COLON    &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS        &kp UNDER &kp LBKT  &kp RBKT  &trans   &trans
                &kp TILDE    &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(BSLH)    &kp PLUS  &kp LBRC  &kp RBRC  &trans   &trans
                                                     &kp LS(N0) &kp UNDER       &kp SPACE &kp DEL
            >;
        };

        callum_layer {
        label = "Callum";
        bindings = <
            // From https://github.com/dxmh/zmk-config/blob/main/config/34keys.keymap
            // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                &kp Q         &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp APOS
            // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp A         &kp R         &kp S         &kp T         &kp G             &kp M         &kp N         &kp E         &kp I         &kp O
            // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp Z         &kp X         &kp C         &kp D         &kp V             &kp K         &kp H         &kp COMMA     &kp DOT       &kp SLASH
            // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                          MO(CNV_L)     &skq LSHIFT       &kp SPACE     MO(CNM_L)
            //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
        >;
        };
        callum_nav_layer {
        label = "NAV";
        bindings = <
            // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                XXX           &key_repeat   XXX           XXX           XXX               XXX           &kp LS(TAB)   &kp TAB       &kp ESC       XXX
            // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                SK(LGUI)      SK(LALT)      SK(LCTL)      SK(LSHIFT)    SK(HYP)           XXX           &kp BSPC      &kp UP        &kp ENTER     &kp DEL
            // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                XXX           XXX           XXX           XXX           XXX               XXX           &kp LEFT      &kp DOWN      &kp RIGHT     XXX
            // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                          ___           ___               ___           ___
            //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
        >;
        };

        callum_num_layer {
        label = "NUM";
        bindings = <
            // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
                &kp BSLH      &kp N7        &kp N8        &kp N9        &kp GRAVE         XXX           XXX           XXX           &key_repeat   XXX
            // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp N0        &kp N4        &kp N5        &kp N6        &kp MINUS         SK(HYP)       SK(RSHIFT)    SK(RCTRL)     SK(LALT)      SK(RGUI)
            // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
                &kp DOT       &kp N1        &kp N2        &kp N3        &kp EQUAL         XXX           XXX           XXX           XXX           XXX
            // ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                          ___           ___               ___           ___
            //                                           ╰─────────────┴─────────────╯   ╰─────────────┴─────────────╯
        >;
        };

        media_layer {
            label = "Media";
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans       &kp C_BRI_UP &kp C_VOL_UP
                &trans     &trans     &trans      &trans          &trans       &trans           &kp C_PREV     &kp C_VOL_DN &kp C_BRI_DN &kp C_VOL_DN
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &kp C_PREV   &kp C_NEXT   &kp C_MUTE
                                                  &trans          &trans       &kp C_STOP       &kp C_PLAY_PAUSE
            >;
        };

        fun_layer {
            label = "Fun";
            bindings = <
                &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &to DEF_L       &tog CAL_L     &trans       &trans       &bt BT_CLR
                &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans       &trans       &trans
                &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &bt BT_SEL 0    &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
                                                   &none      &none             &trans          &trans
            >;
        };
    };
};

